# cd
alias ~='cd ~'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias cddf='cd ~/dotfiles'

# eza
if command -v eza &> /dev/null; then
	__eza_base() { eza -F --group-directories-first --ignore-glob=node_modules "$@"; }
	__eza_short() { __eza_base -x "$@"; }
	ls() { __eza_short --git-ignore "$@"; }
	lsa() { __eza_short -a "$@"; }
	__eza_long() { __eza_base -ghl --git --time-style=long-iso "$@"; }
	__eza_long_default() { __eza_long -a --git-ignore "$@"; }
	l() { __eza_long_default "$@"; }
	ll() { __eza_long_default "$@"; }
	la() { __eza_long -a "$@"; }

	if [ -x "$(command -v watch)" ]; then
		__watch_eza_base() {
			watch -d -n 0.1 --color -- \
				eza -aF --color=always --group-directories-first --ignore-glob=node_modules "$@"
		}
		__watch_eza_short() { __watch_eza_base -x "$@"; }
		wls() { __watch_eza_short --git-ignore "$@"; }
		wlsa() { __watch_eza_short -a "$@"; }
		__watch_eza_long() { __watch_eza_base -ghl --git --time-style=long-iso "$@"; }
		__watch_eza_long_default() { __watch_eza_long -a --git-ignore "$@"; }
		wl() { __watch_eza_long_default "$@"; }
		wll() { __watch_eza_long_default "$@"; }
		wla() { __watch_eza_long -a "$@"; }
	fi
fi

# git
if command -v git &> /dev/null; then
	# add
	alias ga='git add'
	alias gaa='git add -A'
	# add + commit + push
	alias gac='git add -A && git commit && git push -u origin $(gcurr)'
	alias gacf='git add -A && git commit && git push -fu origin $(gcurr)'
	gacm() { git add -A && git commit -m "$1" && git push -u origin $(gcurr); }
	gacmf() { git add -A && git commit -m "$1" && git push -fu origin $(gcurr); }
	# branch
	alias gb='git branch'
	alias gba='git branch -a'
	alias gbd='git branch -d'
	alias gbdd='git branch -D dev'
	# checkout
	alias gco='git checkout'
	alias gcob='git checkout -b'
	alias gcobd='git checkout -b dev'
	gcobt() { git checkout -b "$1" -t "origin/$1"; }
	alias gcom='git checkout master'
	alias gcomp='git checkout master && git pull --force'
	alias gcompd='git checkout master && git pull --force && git branch -D dev'
	# cherry-pick
	alias gcp='git cherry-pick'
	# commit
	alias gcn='git commit --no-verify'
	# diff
	alias gd='git diff'
	alias gdc='git diff --cached'
	alias gdm='git diff origin/master'
	# log
	alias gl='git log --oneline --decorate --graph'
	# mv
	alias gmv='git mv'
	# pull
	alias gpl='git pull --force'
	# push
	alias gp='git push -u origin $(gcurr)'
	alias gpf='git push -fu origin $(gcurr)'
	# rebase
	alias grb='git rebase'
	alias grbi='git rebase -i'
	alias grbim='git rebase -i origin/master'
	alias grbm='git rebase -s recursive -X theirs origin/master'
	# rev-parse
	alias gcurr='git rev-parse --abbrev-ref HEAD'
	alias groot='git rev-parse --show-toplevel'
	# rm
	alias grm='git rm'
	alias grmc='git rm --cached'
	# status
	alias gs='git status'
	# stash
	alias gst='git stash'
	alias gstd='git stash drop'
	alias gstp='git stash pop'
	# tag
	gta() { git tag -a "$1" "$2" -m "$1" && git push -u origin --tags; }
	gtd() { git tag -d "$1" && git push -d origin "$1"; }
fi

# gitweb
if command -v gitweb &> /dev/null; then
	alias gw='gitweb'
	# add + commit + push
	alias gacw='git add -A && git commit && git push -u origin $(gcurr) && gitweb'
	alias gacfw='git add -A && git commit && git push -fu origin $(gcurr) && gitweb'
	gacmw() { git add -A && git commit -m "$1" && git push -u origin $(gcurr) && gitweb; }
	gacmpw() { git add -A && git commit -m "$1" && git push -fu origin $(gcurr) && gitweb; }
	# push
	alias gpw='git push -u origin $(gcurr) && gitweb'
	alias gpfw='git push -fu origin $(gcurr) && gitweb'
fi

# neovim
if command -v nvim &> /dev/null; then
	alias n='nvim'
	alias v='nvim'
	alias vim='nvim'
fi

# pre-commit
if command -v pre-commit &> /dev/null; then
	alias pca='pre-commit run --all-files'
	alias pcau='pre-commit autoupdate'
	alias pci='pre-commit install'
fi

# zsh
alias zprofile='$EDITOR ~/.zprofile'
alias zshrc='$EDITOR ~/.zshrc'

# ---- end ----

# starship
if command -v starship &> /dev/null; then
	eval "$(starship init zsh)"
fi

# zoxide
if command -v zoxide &> /dev/null; then
	eval "$(zoxide init zsh --cmd j --hook prompt)"
fi
