{
  "From '__future__' import ...": {
    "body": "from __future__ import annotations\n",
    "prefix": "im-future"
  },
  "From 'abc' import ...": {
    "body": "from abc import ABC, abstractmethod\n",
    "prefix": "im-abc"
  },
  "From 'asyncio' import ...": {
    "body": "from asyncio import Event, Lock, Queue, Task, TaskGroup, create_task, get_event_loop, run, sleep\n",
    "prefix": "im-asyncio"
  },
  "From 'beartype' import ...": {
    "body": "from beartype import beartype\n",
    "prefix": "im-beartype"
  },
  "From 'bidict' import ...": {
    "body": "from bidict import bidict\n",
    "prefix": "im-bidict"
  },
  "From 'cachetools' import ...": {
    "body": "from cachetools.func import ttl_cache\n",
    "prefix": "im-cachetools"
  },
  "From 'click' import ...": {
    "body": "from click import argument, command, option\nfrom click.testing import CliRunner\n",
    "prefix": "im-click"
  },
  "From 'collections' import ...": {
    "body": "from collections import Counter, deque\nfrom collections.abc import Awaitable, Callable, Iterable, Iterator, Mapping, Sequence\nfrom collections.abc import Set as AbstractSet\n",
    "prefix": "im-collections"
  },
  "From 'contextlib' import ...": {
    "body": "from contextlib import AsyncExitStack, ExitStack, asynccontextmanager, contextmanager, redirect_stderr, redirect_stdout, suppress\n",
    "prefix": "im-contextlib"
  },
  "From 'dataclasses' import ...": {
    "body": "from dataclasses import InitVar, asdict, astuple, dataclass, field, replace\n",
    "prefix": "im-dataclasses"
  },
  "From 'enum' import ...": {
    "body": "from enum import Enum, StrEnum, auto, unique\n",
    "prefix": "im-enum"
  },
  "From 'frozendict' import ...": {
    "body": "from frozendict import frozendict\n",
    "prefix": "im-frozendict"
  },
  "From 'functools' import ...": {
    "body": "from functools import cached_property, partial, reduce, total_ordering, wraps\n",
    "prefix": "im-functools"
  },
  "From 'getpass' import ...": {
    "body": "from getpass import getuser\n",
    "prefix": "im-getpass"
  },
  "From 'humanize' import ...": {
    "body": "from humanize import naturaldelta, naturaltime\n",
    "prefix": "im-humanize"
  },
  "From 'hypothesis' import ...": {
    "body": "from hypothesis import HealthCheck, Phase, assume, given, reproduce_failure, settings\nfrom hypothesis.errors import InvalidArgument\nfrom hypothesis.strategies import binary, booleans, builds, composite, data, DataObject, dates, datetimes, DrawFn, floats, integers, just, lists, none, permutations, randoms, sampled_from, sets, tuples\n",
    "prefix": "im-hypothesis"
  },
  "From 'ib_async' import ...": {
    "body": "from ib_async import IB, CommissionReport, ContFuture, Contract, ContractDetails, Crypto, Execution, Fill, Forex, Future, Index, Order, OrderStatus, Stock, Trade\n",
    "prefix": "im-ib-async"
  },
  "From 'importlib' import ...": {
    "body": "from importlib.resources import files\n",
    "prefix": "im-importlib"
  },
  "From 'inspect' import ...": {
    "body": "from inspect import signature\n",
    "prefix": "im-inspect"
  },
  "From 'io' import ...": {
    "body": "from io import StringIO\n",
    "prefix": "im-io"
  },
  "From 'itertools' import ...": {
    "body": "from itertools import accumulate, chain, count, cycle, dropwhile, groupby, islice, pairwise, product, repeat, starmap, takewhile\n",
    "prefix": "im-itertools"
  },
  "From 'logging' import ...": {
    "body": "from logging import Formatter, Handler, StreamHandler, getLogger\n",
    "prefix": "im-logging"
  },
  "From 'math' import ...": {
    "body": "from math import inf, isclose, isnan, nan\n",
    "prefix": "im-math"
  },
  "From 'more_itertools' import ...": {
    "body": "from more_itertools import chunked, iterate, map_except, partition, split_after\n",
    "prefix": "im-more-itertools"
  },
  "From 'numpy' import ...": {
    "body": "import numpy as np\nfrom numpy import arange, full, isnan, linspace, nan, ndarray, pi\n",
    "prefix": "im-numpy"
  },
  "From 'operator' import ...": {
    "body": "from operator import add, and_, eq, ge, gt, le, lt, mul, ne, neg, or_, sub, truediv\n",
    "prefix": "im-operator"
  },
  "From 'optuna' import ...": {
    "body": "from optuna import Study, Trial\nfrom optuna.pruners import BasePruner\nfrom optuna.samplers import BaseSampler\nfrom optuna.study import StudyDirection\n",
    "prefix": "im-optuna"
  },
  "From 'os' import ...": {
    "body": "from os import environ\n",
    "prefix": "im-os"
  },
  "From 'pathlib' import ...": {
    "body": "from pathlib import Path\n",
    "prefix": "im-pathlib"
  },
  "From 'polars' import ...": {
    "body": "import polars as pl\nfrom polars import Boolean, DataFrame, Date, Datetime, Duration, Enum, Expr, Float64, Int8, Int16, Int32, Int64, List, Series, String, Struct, UInt8, UInt16, UInt32, UInt64, Utf8, all_horizontal, any_horizontal, coalesce, col, concat, date_range, date_ranges, datetime_range, element, from_epoch, int_range, int_ranges, lit, max_horizontal, min_horizontal, repeat, struct, when\nfrom polars._typing import IntoExpr, IntoExprColumn, SchemaDict\nfrom polars.exceptions import ColumnNotFoundError, ComputeError, NoRowsReturnedError\n",
    "prefix": "im-polars"
  },
  "From 'random' import ...": {
    "body": "from random import Random, choice, randint, seed, shuffle\n",
    "prefix": "im-random"
  },
  "From 're' import ...": {
    "body": "import re\nfrom re import DOTALL, IGNORECASE, MULTILINE, escape, findall, search, sub\n",
    "prefix": "im-re"
  },
  "From 'redis' import ...": {
    "body": "from redis.asyncio import Redis\n",
    "prefix": "im-redis"
  },
  "From 'reprlib' import ...": {
    "body": "import reprlib\nfrom reprlib import repr\n",
    "prefix": "im-reprlib"
  },
  "From 'rich' import ...": {
    "body": "from rich.pretty import pretty_repr\n",
    "prefix": "im-rich"
  },
  "From 'shutil' import ...": {
    "body": "from shutil import rmtree\n",
    "prefix": "im-shutil"
  },
  "From 'sqlalchemy' import ...": {
    "body": "from sqlalchemy import Column, and_, func, insert, or_, select, text\nfrom sqlalchemy.engine.url import URL\nfrom sqlalchemy.exc import MultipleResultsFound, NoResultFound\n",
    "prefix": "im-sqlalchemy"
  },
  "From 'statistics' import ...": {
    "body": "from statistics import fmean, mean\n",
    "prefix": "im-statistics"
  },
  "From 'string' import ...": {
    "body": "from string import Template, ascii_letters\n",
    "prefix": "im-string"
  },
  "From 'subprocess' import ...": {
    "body": "from subprocess import check_call, check_output, run\n",
    "prefix": "im-subprocess"
  },
  "From 'sys' import ...": {
    "body": "from sys import stderr, stdout\n",
    "prefix": "im-sys"
  },
  "From 'tabulate' import ...": {
    "body": "from tabulate import tabulate\n",
    "prefix": "im-tabulate"
  },
  "From 'tempfile' import ...": {
    "body": "from tempfile import TemporaryDirectory\n",
    "prefix": "im-tempfile"
  },
  "From 'zoneinfo' import ...": {
    "body": "from zoneinfo import ZoneInfo\n",
    "prefix": "im-zoneinfo"
  },
  "Import 'datetime'": {
    "body": "import datetime as dt\n",
    "prefix": "im-datetime"
  }
}
